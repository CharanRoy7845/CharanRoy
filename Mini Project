import java.util.Random;
import java.util.Scanner;
class Tictactoe
{
	static char[][]board;
	 public Tictactoe()
	 {
		 board=new char[3][3];
		 initiaboard();
	 }
	 void initiaboard() 
	 {
       for(int i=0;i<board.length;i++)
       {
	    for(int j=0;j<board[i].length;j++)
	    {
		   board[i][j]=' ';
	    }
       }

	 }
       void display()
       {
    	   System.out.println("-------------");
    	   for(int i=0;i<board.length;i++)
           {
    		   System.out.print("| ");
           
    	    for(int j=0;j<board[i].length;j++)
    	    {
    		   System.out.print(board[i][j]+" | ");
    	    }
    	    System.out.println();
    	    System.out.println("-------------");
       }
       }
    	static  void placemark(int row ,int col ,char mark)
    	   {
    		   if(row>=0 && row<=2 && col>=0 && col<=2)
    		   {
    		   board[row][col]=mark;
    	       }
    		   else
    		   {
    			   System.out.println("invalid input");
    		   }
    	   }
    		  static boolean checkcolwin()
    		   {
    			   for(int j=0;j<2;j++)
    			   {
    		         if(board[0][j]!=' '&& board[0][j]==board[1][j] &&
    	              board[1][j]==board[2][j] )
    		         {
    		           System.out.println("you are won at columns");
    		        	return true;
    		         }
    		        
    		   }
				return false;
    		   }
			static	 boolean checkrowwin()
	    		   {
	    			   for(int i=0;i<=2;i++)
	    			   {
	    		         if(board[i][0]!=' '&& board[i][0]==board[i][1] &&
	    	              board[i][1]==board[i][2] )
	    		         {
	    		           System.out.println("you are won at rows");
	    		        	return true;
	    		         }
	    		        
	    		   }
					return false;
	    		   }
				static boolean checkdiagwin()
				 {
					 if(board[0][0]!=' '&& board[0][0]==board[1][1]&&board[1][1]==board[2][2] || 
							 board[0][2]!=' '&& board[1][2]==board[1][1]&&board[1][1]==board[2][0])
					 {
						 System.out.println("you are won at diagnoally");
						 return true;
					 }
					return false;
				
}

static boolean checkdraw()
{
	for(int i=0;i<=2;i++)
	{
		for(int j=0;j<=2;j++)
		{
			if(board[i][j]==' ')
			{
				return false;
			}
		}
	}
	return true;
}
}
class Humanplayer extends Player{
	public Humanplayer(String name,char mark)
	{
		this.name=name;
		this.mark=mark;
	}
	void makemove()
	{
	Scanner scan =new Scanner(System.in);
	int row;
	int col;
	do {
	System.out.println("enter row and column");
	 row=scan.nextInt();
	 col=scan.nextInt();
	}while(!isvalidmove(row,col));	
	Tictactoe.placemark(row, col, mark);
	}
}
class AIplayer extends Player{
	
	public AIplayer(String name,char mark)
	{
		this.name=name;
		this.mark=mark;
	}
	
	void makemove()
	{
		int row,col;
		do
		{
      Random r=new Random();
      row =r.nextInt(3);
      col=r.nextInt(3);
		}while(!isvalidmove(row,col));
		Tictactoe.placemark(row, col, mark);
	}
}
abstract class Player
{
	String name;
	char mark;
	abstract void makemove();
	boolean isvalidmove(int row,int col)
	{
		if(row>=0&&row<=2 &&col>=0&&col<=2) {
	  if(Tictactoe.board[row][col]==' ')
	  {
		  return true;
	  }
	}
	  return false;
	}
	
}
public class main {
public static void main(String[]args) {
         Tictactoe t=new Tictactoe();	
       
       Humanplayer p1=new Humanplayer("charan",'x');
       AIplayer p2=new AIplayer("teja",'o');
       Player cp;
       cp=p1;
       while(true) {
       System.out.println(cp.name+" turns");
       cp.makemove();
       t.display();
       if(Tictactoe.checkcolwin() || Tictactoe.checkrowwin()||Tictactoe.checkdiagwin())
       {
    	   System.out.println(cp.name+" wons the game");
    	   break;
       }
       else if(Tictactoe.checkdraw())
       {
    	   System.out.println("game is draw");
    	   break;
       }
       else
       {
    	   if(cp==p1)
    	   {
    		   cp=p2;
    	   }
    	   else
    	   {
    		   cp=p1;
    	   }
       }
       }
}
}
